coinImage = imread("coinImage.png"); 

% Step 1: Read the grayscale image


% Step 2: Create a binary mask of the coins
threshold = graythresh(coinImage);
coinMask = imbinarize(coinImage, threshold);
coinMask = imfill(coinMask, 'holes');           % Fill internal holes
coinMask = bwareaopen(coinMask, 100);           % Remove small particles
coinMask = imclose(coinMask, strel('disk', 5)); % Smooth edges

% Step 3: Create the masked coin image
maskedCoinImage = coinImage;
maskedCoinImage(~coinMask) = 0;

% Step 4: Measure region properties
coinProps = regionprops(coinMask, 'Area', 'Perimeter');
coinSizes = struct2table(coinProps);

% Step 5: Classify coins using K-means clustering on Area
areaValues = coinSizes.Area;
nClusters = 4;
[clusterLabels, clusterCenters] = kmeans(areaValues, nClusters, 'Replicates', 5);

% Sort cluster centers to assign coin types consistently
[sortedCenters, sortIdx] = sort(clusterCenters);
coinTypeLabels = zeros(nClusters, 1);
coinTypeLabels(sortIdx(1)) = 1; % Dime
coinTypeLabels(sortIdx(2)) = 2; % Nickel
coinTypeLabels(sortIdx(3)) = 3; % Quarter
coinTypeLabels(sortIdx(4)) = 4; % Fifty Cent

% Assign coin type to each detected coin
coinTypes = coinTypeLabels(clusterLabels);

% Count each coin type
nDimes = sum(coinTypes == 1);
nNickels = sum(coinTypes == 2);
nQuarters = sum(coinTypes == 3);
nFiftyCents = sum(coinTypes == 4);

% Calculate total USD value
USD = nDimes * 0.10 + nNickels * 0.05 + nQuarters * 0.25 + nFiftyCents * 0.50;

% Step 6: Display results
figure;
subplot(1,3,1); imshow(coinImage); title('Original Grayscale Image');
subplot(1,3,2); imshow(coinMask); title('Binary Coin Mask');
subplot(1,3,3); imshow(maskedCoinImage); title('Masked Coin Image');

disp('--- Coin Sizes (Area and Perimeter) ---');
disp(coinSizes);

fprintf('Number of Dimes: %d\n', nDimes);
fprintf('Number of Nickels: %d\n', nNickels);
fprintf('Number of Quarters: %d\n', nQuarters);
fprintf('Number of 50-cent Coins: %d\n', nFiftyCents);
fprintf('Total USD Value: $%.2f\n', USD);

