testImageIdx = randi([1,3]);
testCoinImage = imread("testCoinImage"+testImageIdx+".png");
figure, imshow(testCoinImage)

% Step 1: Randomly select test coin image
testImageIdx = randi([1,3]);
testCoinImage = imread("testCoinImage" + testImageIdx + ".png");

% Step 2: Convert to grayscale if needed
if size(testCoinImage, 3) == 3
    testCoinImage = rgb2gray(testCoinImage);
end

% Step 3: Use global thresholding (Otsu's method)
threshold = graythresh(testCoinImage);
bw = imbinarize(testCoinImage, threshold);

% Step 4: Invert if coins appear black (we want coins as foreground = 1)
if mean(testCoinImage(bw)) < mean(testCoinImage(~bw))
    bw = ~bw;
end

% Step 5: Morphological operations to clean up the mask
bw = imfill(bw, 'holes');             % Fill holes inside coins
bw = bwareaopen(bw, 300);             % Remove small blobs (increase size to remove extra noise)
bw = imclose(bw, strel('disk', 5));   % Close small gaps

% Step 6: Final foreground mask
testCoinMask = bw;

% Step 7: Visualize
figure;
subplot(1,2,1), imshow(testCoinImage), title("Test Image " + testImageIdx);
subplot(1,2,2), imshow(testCoinMask), title("Accurate Foreground Mask");
